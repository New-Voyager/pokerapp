version: '3'

services:
  game-server:
    image: ${GAME_SERVER_IMAGE}
    tty: true
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - nats
      - api-server
    environment:
      NATS_HOST: nats
      NATS_CLIENT_PORT: 4222
      PERSIST_METHOD: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      API_SERVER_URL: http://api-server:9501
    command:
      - "/bin/sh"
      - "-c"
      - "sleep 10 && /app/game-server --server"

  nats:
    image: ${NATS_SERVER_IMAGE}
    restart: always
    ports:
      - 4222:4222
      - 8222:8222
      - 9222:9222

  redis:
    image: ${REDIS_IMAGE}
    restart: always
    ports:
      - 6379:6379

  api-server:
    image: ${API_SERVER_IMAGE}
    restart: always
    ports:
      - 9501:9501
    depends_on:
      - postgres
      - nats
    command:
      - "/bin/sh"
      - "-c"
      - "sleep 5 && yarn run-docker"
    environment:
      BOTRUNNER_URL: http://botrunner:8081

  postgres:
    image: ${POSTGRES_IMAGE}
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: 'game'
      POSTGRES_PASSWORD: 'game'

  botrunner:
    image: ${BOTRUNNER_IMAGE}
    tty: true
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - api-server
    environment:
      API_SERVER_URL: http://api-server:9501
      NATS_HOST: nats
      NATS_CLIENT_PORT: 4222
      PERSIST_METHOD: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0

volumes:
  db-data:
      
networks:
  default:
    external:
      name: game
